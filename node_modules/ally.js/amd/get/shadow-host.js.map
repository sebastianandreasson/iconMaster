{"version":3,"sources":["../../src/get/shadow-host.js"],"names":[],"mappings":";;;;;;;mBAGe,YAAyB;qEAAJ,EAAE;;QAAb,OAAO,QAAP,OAAO;;AAC9B,QAAI,OAAO,GAAG,2BAAU,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,QAAI,CAAC,OAAO,EAAE;AACZ,YAAM,IAAI,SAAS,CAAC,gDAAgD,CAAC,CAAC;KACvE;;;AAGD,QAAI,SAAS,GAAG,IAAI,CAAC;;AAErB,WAAO,OAAO,EAAE;AACd,eAAS,GAAG,OAAO,CAAC;AACpB,aAAO,GAAG,OAAO,CAAC,UAAU,CAAC;KAC9B;;AAED,QAAI,CAAC,SAAS,EAAE;AACd,aAAO,IAAI,CAAC;KACb;;;;AAID,QAAI,SAAS,CAAC,QAAQ,KAAK,SAAS,CAAC,sBAAsB,IAAI,SAAS,CAAC,IAAI,EAAE;;AAE7E,aAAO,SAAS,CAAC,IAAI,CAAC;KACvB;;AAED,WAAO,IAAI,CAAC;GACb","file":"shadow-host.js","sourcesContent":["\nimport nodeArray from '../util/node-array';\n\nexport default function({context} = {}) {\n  let element = nodeArray(context)[0];\n  if (!element) {\n    throw new TypeError('get/shadow-host requires valid options.context');\n  }\n\n  // walk up to the root\n  let container = null;\n\n  while (element) {\n    container = element;\n    element = element.parentNode;\n  }\n\n  if (!container) {\n    return null;\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Node.nodeType\n  // NOTE: Firefox 34 does not expose ShadowRoot.host (but 37 does)\n  if (container.nodeType === container.DOCUMENT_FRAGMENT_NODE && container.host) {\n    // the root is attached to a fragment node that has a host\n    return container.host;\n  }\n\n  return null;\n}\n"]}