{"version":3,"sources":["../../src/is/focusable.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAcA,WAAS,mBAAmB,CAAC,OAAO,EAAE;AACpC,QAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;AAChD,QAAI,QAAQ,KAAK,OAAO,IAAI,QAAQ,KAAK,QAAQ,EAAE;;;AAGjD,aAAO,IAAI,CAAC;KACb;;AAED,WAAO,KAAK,CAAC;GACd;;mBAEc,UAAS,OAAO,EAAE;AAC/B,QAAI,OAAO,KAAK,QAAQ,EAAE;AACxB,aAAO,GAAG,QAAQ,CAAC,eAAe,CAAC;KACpC;;AAED,QAAI,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAE;AACtD,YAAM,IAAI,SAAS,CAAC,mDAAmD,CAAC,CAAC;KAC1E;;AAED,QAAI,CAAC,iCAAgB,OAAO,CAAC,IAAI,mBAAmB,CAAC,OAAO,CAAC,EAAE;AAC7D,aAAO,KAAK,CAAC;KACd;;AAED,QAAI,4BAAW,OAAO,CAAC,EAAE;AACvB,aAAO,KAAK,CAAC;KACd;;AAED,QAAI,gCAAe,OAAO,CAAC,EAAE;;AAE3B,aAAO,KAAK,CAAC;KACd;;;AAGD,QAAI,CAAC,2BAAU,OAAO,CAAC,EAAE;AACvB,aAAO,KAAK,CAAC;KACd;;AAED,WAAO,IAAI,CAAC;GACb","file":"focusable.js","sourcesContent":["\n// determine if an element can be focused\n\n// http://www.w3.org/TR/html5/editing.html#focus-management\n\n// NOTE: The following known issues exist:\n//   Gecko: `svg a[xlink|href]` is not identified as focusable (because SVGElement.prototype.focus is missing)\n//   Blink, WebKit: SVGElements that have been made focusable by adding a focus event listener are not identified as focusable\n\nimport isFocusRelevant from './focus-relevant';\nimport isVisible from './visible';\nimport isDisabled from './disabled';\nimport isOnlyTabbable from './only-tabbable';\n\nfunction isOnlyFocusRelevant(element) {\n  const nodeName = element.nodeName.toLowerCase();\n  if (nodeName === 'embed' || nodeName === 'keygen') {\n    // embed is considered focus-relevant but not focusable\n    // see https://github.com/medialize/ally.js/issues/82\n    return true;\n  }\n\n  return false;\n}\n\nexport default function(element) {\n  if (element === document) {\n    element = document.documentElement;\n  }\n\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    throw new TypeError('is/focusable requires an argument of type Element');\n  }\n\n  if (!isFocusRelevant(element) || isOnlyFocusRelevant(element)) {\n    return false;\n  }\n\n  if (isDisabled(element)) {\n    return false;\n  }\n\n  if (isOnlyTabbable(element)) {\n    // some elements may be keyboard focusable, but not script focusable\n    return false;\n  }\n\n  // elements that are not rendered, cannot be focused\n  if (!isVisible(element)) {\n    return false;\n  }\n\n  return true;\n}\n"]}