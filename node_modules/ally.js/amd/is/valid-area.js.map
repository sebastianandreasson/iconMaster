{"version":3,"sources":["../../src/is/valid-area.js"],"names":[],"mappings":";;;;;;;;;;;;;AAQA,MAAI,QAAQ,YAAA,CAAC;;;;;;mBAKE,UAAS,OAAO,EAAE;AAC/B,QAAI,CAAC,QAAQ,EAAE;AACb,cAAQ,GAAG,4BAAW,CAAC;KACxB;;AAED,QAAI,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAE;AACtD,YAAM,IAAI,SAAS,CAAC,oDAAoD,CAAC,CAAC;KAC3E;;AAED,QAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;AAChD,QAAI,QAAQ,KAAK,MAAM,EAAE;AACvB,aAAO,KAAK,CAAC;KACd;;AAED,QAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;AACrD,QAAI,CAAC,QAAQ,CAAC,oBAAoB,IAAI,WAAW,EAAE;;AAEjD,aAAO,KAAK,CAAC;KACd;;AAED,QAAM,GAAG,GAAG,YA5BN,cAAc,EA4BO,OAAO,CAAC,CAAC;AACpC,QAAI,CAAC,GAAG,IAAI,CAAC,2BAAU,GAAG,CAAC,EAAE;AAC3B,aAAO,KAAK,CAAC;KACd;;;;AAID,QAAI,CAAC,QAAQ,CAAC,uBAAuB,KAAK,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,aAAa,IAAI,GAAG,CAAC,WAAW,IAAI,CAAC,IAAI,GAAG,CAAC,YAAY,IAAI,CAAC,CAAA,AAAC,EAAE;AAC/H,aAAO,KAAK,CAAC;KACd;;;AAGD,QAAI,CAAC,QAAQ,CAAC,uBAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;;;AAGtD,aAAO,QAAQ,CAAC,oBAAoB,IAAI,WAAW,IAAI,QAAQ,CAAC,uBAAuB,IAAI,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;KACzH;;;AAGD,QAAM,kBAAkB,GAAG,6BAAW,EAAC,OAAO,EAAE,GAAG,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAS,QAAQ,EAAE;AACrF,UAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;AAC7C,aAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,GAAG,CAAC;KAC1C,CAAC,CAAC;;AAEH,QAAI,kBAAkB,EAAE;AACtB,aAAO,KAAK,CAAC;KACd;;AAED,WAAO,IAAI,CAAC;GACb","file":"valid-area.js","sourcesContent":["\n// determine if an <area> element is being properly used by and <img> via a <map>\n\nimport isVisible from './visible';\nimport getParents from '../get/parents';\nimport {getImageOfArea} from './is.util';\n\nimport _supports from './valid-area.supports';\nlet supports;\n\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-usemap\n// https://github.com/jquery/jquery-ui/blob/master/ui/core.js#L88-L107\nexport default function(element) {\n  if (!supports) {\n    supports = _supports();\n  }\n\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    throw new TypeError('is/valid-area requires an argument of type Element');\n  }\n\n  const nodeName = element.nodeName.toLowerCase();\n  if (nodeName !== 'area') {\n    return false;\n  }\n\n  const hasTabindex = element.hasAttribute('tabindex');\n  if (!supports.canFocusAreaTabindex && hasTabindex) {\n    // Blink and WebKit do not consider <area tabindex=\"-1\" href=\"#void\"> focusable\n    return false;\n  }\n\n  const img = getImageOfArea(element);\n  if (!img || !isVisible(img)) {\n    return false;\n  }\n\n  // Firefox only allows fully loaded images to reference image maps\n  // https://stereochro.me/ideas/detecting-broken-images-js\n  if (!supports.canFocusBrokenImageMaps && (!img.complete || !img.naturalHeight || img.offsetWidth <= 0 || img.offsetHeight <= 0)) {\n    return false;\n  }\n\n  // Firefox supports.can focus area elements even if they don't have an href attribute\n  if (!supports.canFocusAreaWithoutHref && !element.href) {\n    // Internet explorer supports.can focus area elements without href if either\n    // the area element or the image element has a tabindex attribute\n    return supports.canFocusAreaTabindex && hasTabindex || supports.canFocusAreaImgTabindex && img.hasAttribute('tabindex');\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-usemap\n  const childOfInteractive = getParents({context: img}).slice(1).some(function(_element) {\n    const name = _element.nodeName.toLowerCase();\n    return name === 'button' || name === 'a';\n  });\n\n  if (childOfInteractive) {\n    return false;\n  }\n\n  return true;\n}\n"]}