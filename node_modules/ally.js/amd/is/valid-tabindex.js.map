{"version":3,"sources":["../../src/is/valid-tabindex.js"],"names":[],"mappings":";;;;;;;;;AAIA,MAAI,QAAQ,YAAA,CAAC;;;;AAIb,MAAM,6BAA6B,GAAG,uBAAuB,CAAC;AAC9D,MAAM,+BAA+B,GAAG,sBAAsB,CAAC;;mBAEhD,UAAS,OAAO,EAAE;AAC/B,QAAI,CAAC,QAAQ,EAAE;AACb,cAAQ,GAAG,4BAAW,CAAC;KACxB;;AAED,QAAM,mBAAmB,GAAG,QAAQ,CAAC,wBAAwB,GACzD,+BAA+B,GAC/B,6BAA6B,CAAC;;AAElC,QAAI,OAAO,KAAK,QAAQ,EAAE;AACxB,aAAO,GAAG,QAAQ,CAAC,eAAe,CAAC;KACpC;;AAED,QAAI,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAE;AACtD,YAAM,IAAI,SAAS,CAAC,wDAAwD,CAAC,CAAC;KAC/E;;AAED,QAAI,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE;AACrC,aAAO,KAAK,CAAC;KACd;;;AAGD,QAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,EAAE;AAClC,aAAO,KAAK,CAAC;KACd;;;AAGD,QAAI,QAAQ,CAAC,kBAAkB,EAAE;AAC/B,aAAO,IAAI,CAAC;KACb;;AAED,QAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;;;AAGlD,QAAI,QAAQ,KAAK,QAAQ,EAAE;AACzB,aAAO,KAAK,CAAC;KACd;;AAED,WAAO,OAAO,CAAC,QAAQ,IAAI,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;GAChE","file":"valid-tabindex.js","sourcesContent":["\n// determine if an element's tabindex attribute has a valid value\n\nimport _supports from './valid-tabindex.supports';\nlet supports;\n\n// http://www.w3.org/TR/html5/infrastructure.html#rules-for-parsing-integers\n// NOTE: all browsers agree to allow trailing spaces as well\nconst validIntegerPatternNoTrailing = /^\\s*(-|\\+)?[0-9]+\\s*$/;\nconst validIntegerPatternWithTrailing = /^\\s*(-|\\+)?[0-9]+.*$/;\n\nexport default function(element) {\n  if (!supports) {\n    supports = _supports();\n  }\n\n  const validIntegerPattern = supports.allowsTrailingCharacters\n    ? validIntegerPatternWithTrailing\n    : validIntegerPatternNoTrailing;\n\n  if (element === document) {\n    element = document.documentElement;\n  }\n\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    throw new TypeError('is/valid-tabindex requires an argument of type Element');\n  }\n\n  if (!element.hasAttribute('tabindex')) {\n    return false;\n  }\n\n  // SVGElement does not support tabIndex, so it cannot be considered valid\n  if (element.tabIndex === undefined) {\n    return false;\n  }\n\n  // @browser-issue Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  if (supports.allowsInvalidValue) {\n    return true;\n  }\n  // an element matches the tabindex selector even if its value is invalid\n  const tabindex = element.getAttribute('tabindex');\n  // IE11 parses tabindex=\"\" as the value \"-32768\"\n  // @browser-issue Trident https://connect.microsoft.com/IE/feedback/details/1072965\n  if (tabindex === '-32768') {\n    return false;\n  }\n\n  return Boolean(tabindex && validIntegerPattern.test(tabindex));\n}\n"]}