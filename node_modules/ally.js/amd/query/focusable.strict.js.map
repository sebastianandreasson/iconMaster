{"version":3,"sources":["../../src/query/focusable.strict.js"],"names":[],"mappings":";;;;;;mBA+CwB,oBAAoB;;;;;;;;;;;;;AArC5C,MAAM,eAAe,GAAG,SAAlB,eAAe,CAAY,IAAI,EAAE;AACrC,QAAI,IAAI,CAAC,UAAU,EAAE;;;AAGnB,aAAO,UAAU,CAAC,aAAa,CAAC;KACjC;;AAED,QAAI,8BAAY,IAAI,CAAC,EAAE;;AAErB,aAAO,UAAU,CAAC,aAAa,CAAC;KACjC;;AAED,WAAO,UAAU,CAAC,WAAW,CAAC;GAC/B,CAAC;;;AAGF,iBAAe,CAAC,UAAU,GAAG,eAAe,CAAC;;;AAG7C,MAAM,uBAAuB,GAAG,SAA1B,uBAAuB,CAAY,IAAI,EAAE;AAC7C,QAAI,IAAI,CAAC,UAAU,EAAE;;;AAGnB,aAAO,UAAU,CAAC,aAAa,CAAC;KACjC;;AAED,QAAI,iCAAe,IAAI,CAAC,IAAI,kCAAgB,IAAI,CAAC,EAAE;;AAEjD,aAAO,UAAU,CAAC,aAAa,CAAC;KACjC;;AAED,WAAO,UAAU,CAAC,WAAW,CAAC;GAC/B,CAAC;;;AAGF,yBAAuB,CAAC,UAAU,GAAG,uBAAuB,CAAC;;AAE9C,WAAS,oBAAoB,GAA2C;qEAAJ,EAAE;;QAAvC,OAAO,QAAP,OAAO;QAAE,cAAc,QAAd,cAAc;QAAE,QAAQ,QAAR,QAAQ;;AAC7E,QAAI,CAAC,OAAO,EAAE;AACZ,aAAO,GAAG,QAAQ,CAAC,eAAe,CAAC;KACpC;;AAED,QAAM,SAAS,GAAG,6BAAY,OAAO,CAAC,CAAC;;AAEvC,QAAM,MAAM,GAAG,SAAS,CAAC,gBAAgB;;AAEvC,WAAO;;AAEP,cAAU,CAAC,YAAY;;AAEvB,YAAQ,KAAK,KAAK,GAAG,uBAAuB,GAAG,eAAe;;AAE9D,SAAK,CACN,CAAC;;AAEF,QAAI,IAAI,GAAG,EAAE,CAAC;;AAEd,WAAO,MAAM,CAAC,QAAQ,EAAE,EAAE;AACxB,UAAI,MAAM,CAAC,WAAW,CAAC,UAAU,EAAE;AACjC,YAAI,8BAAY,MAAM,CAAC,WAAW,CAAC,EAAE;AACnC,cAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC/B;;AAED,YAAI,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC;AACtC,iBAAO,EAAE,MAAM,CAAC,WAAW,CAAC,UAAU;AACtC,kBAAQ,EAAR,QAAQ;SACT,CAAC,CAAC,CAAC;OACL,MAAM;AACL,YAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;OAC/B;KACF;;;AAGD,QAAI,cAAc,EAAE;AAClB,UAAI,QAAQ,KAAK,KAAK,EAAE;AACtB,YAAI,iCAAe,OAAO,CAAC,IAAI,kCAAgB,OAAO,CAAC,EAAE;AACvD,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SACvB;OACF,MAAM,IAAI,8BAAY,OAAO,CAAC,EAAE;AAC/B,YAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;OACvB;KACF;;AAED,WAAO,IAAI,CAAC;GACb","file":"focusable.strict.js","sourcesContent":["\n// http://www.w3.org/TR/html5/editing.html#focusable\n// http://www.w3.org/WAI/PF/aria-practices/#keyboard\n\nimport isFocusable from '../is/focusable';\nimport isFocusRelevant from '../is/focus-relevant';\nimport isOnlyTabbable from '../is/only-tabbable';\nimport getDocument from '../util/get-document';\n\n// see https://developer.mozilla.org/en-US/docs/Web/API/NodeFilter\nconst FocusableFilter = function(node) {\n  if (node.shadowRoot) {\n    // return ShadowRoot elements regardless of them being focusable,\n    // so they can be walked recursively later\n    return NodeFilter.FILTER_ACCEPT;\n  }\n\n  if (isFocusable(node)) {\n    // finds elements that could have been found by document.querySelectorAll()\n    return NodeFilter.FILTER_ACCEPT;\n  }\n\n  return NodeFilter.FILTER_SKIP;\n};\n// IE requires a function, Browsers require {acceptNode: function}\n// see http://www.bennadel.com/blog/2607-finding-html-comment-nodes-in-the-dom-using-treewalker.htm\nFocusableFilter.acceptNode = FocusableFilter;\n\n// see https://developer.mozilla.org/en-US/docs/Web/API/NodeFilter\nconst PossiblyFocusableFilter = function(node) {\n  if (node.shadowRoot) {\n    // return ShadowRoot elements regardless of them being focusable,\n    // so they can be walked recursively later\n    return NodeFilter.FILTER_ACCEPT;\n  }\n\n  if (isOnlyTabbable(node) || isFocusRelevant(node)) {\n    // finds elements that could have been found by document.querySelectorAll()\n    return NodeFilter.FILTER_ACCEPT;\n  }\n\n  return NodeFilter.FILTER_SKIP;\n};\n// IE requires a function, Browsers require {acceptNode: function}\n// see http://www.bennadel.com/blog/2607-finding-html-comment-nodes-in-the-dom-using-treewalker.htm\nPossiblyFocusableFilter.acceptNode = PossiblyFocusableFilter;\n\nexport default function queryFocusableStrict({context, includeContext, strategy} = {}) {\n  if (!context) {\n    context = document.documentElement;\n  }\n\n  const _document = getDocument(context);\n  // see https://developer.mozilla.org/en-US/docs/Web/API/Document/createTreeWalker\n  const walker = _document.createTreeWalker(\n    // root element to start search in\n    context,\n    // element type filter\n    NodeFilter.SHOW_ELEMENT,\n    // custom NodeFilter filter\n    strategy === 'all' ? PossiblyFocusableFilter : FocusableFilter,\n    // deprecated, but IE requires it\n    false\n  );\n\n  let list = [];\n\n  while (walker.nextNode()) {\n    if (walker.currentNode.shadowRoot) {\n      if (isFocusable(walker.currentNode)) {\n        list.push(walker.currentNode);\n      }\n\n      list = list.concat(queryFocusableStrict({\n        context: walker.currentNode.shadowRoot,\n        strategy,\n      }));\n    } else {\n      list.push(walker.currentNode);\n    }\n  }\n\n  // add context if requested and focusable\n  if (includeContext) {\n    if (strategy === 'all') {\n      if (isOnlyTabbable(context) || isFocusRelevant(context)) {\n        list.unshift(context);\n      }\n    } else if (isFocusable(context)) {\n      list.unshift(context);\n    }\n  }\n\n  return list;\n}\n"]}