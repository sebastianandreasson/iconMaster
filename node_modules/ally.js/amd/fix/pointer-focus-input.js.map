{"version":3,"sources":["../../src/fix/pointer-focus-input.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAcA,MAAI,MAAM,YAAA,CAAC;AACX,MAAI,SAAS,YAAA,CAAC;;AAEd,MAAM,wBAAwB,GAAG,sBAAS,EAAE,CAAC,MAAM,KAAK,MAAM,KACxD,sBAAS,MAAM,KAAK,OAAO,IAAI,sBAAS,MAAM,KAAK,QAAQ,CAAA,AAAC,CAAC;;AAEnE,MAAI,CAAC,wBAAwB,EAAE;AAC7B,UAAM,GAAG,YAAW,EAAE,CAAC;GACxB,MAAM;;AACL,UAAM,YAAY,GAAG,kBAAkB,CAAC;;AAExC,UAAM,oBAAoB,GAAG,SAAvB,oBAAoB,CAAY,KAAK,EAAE;AAC3C,YAAI,KAAK,CAAC,gBAAgB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;;AAEtF,iBAAO;SACR;;;AAGD,SAAC,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,UAAU,CAAA,CAAE,YAAW;AACpD,eAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACtB,CAAC,CAAC;OACJ,CAAC;;AAEF,UAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAY,KAAK,EAAE;AACzC,YAAI,KAAK,CAAC,gBAAgB,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE;;AAE7E,iBAAO;SACR;;;AAGD,aAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;OACtB,CAAC;;AAEF,YAAM,GAAG,UAAS,OAAO,EAAE;AACzB,eAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;;AAEnE,eAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;OAChE,CAAC;;AAEF,eAAS,GAAG,UAAS,OAAO,EAAE;AAC5B,eAAO,CAAC,mBAAmB,CAAC,WAAW,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;AACtE,eAAO,CAAC,mBAAmB,CAAC,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;OACnE,CAAC;;GACH;;mBAEc,iCAAgB,EAAE,MAAM,EAAN,MAAM,EAAE,SAAS,EAAT,SAAS,EAAE,CAAC","file":"pointer-focus-input.js","sourcesContent":["/*\n  Clicking on form field does not necessarily assign it focus in Safari and Firefox on Mac OS X.\n  While not a browser bug, it may be considered undesired behavior.\n\n  https://bugs.webkit.org/show_bug.cgi?id=22261\n  https://bugs.webkit.org/show_bug.cgi?id=118043\n\n  Note: This behavior can be turned off in Firefox by changing the\n  option `accessibility.mouse_focuses_formcontrol` in about:config\n*/\n\nimport platform from 'platform';\nimport decorateContext from '../util/decorate-context';\n\nlet engage;\nlet disengage;\n// This fix is only relevant to Safari and Firefox on OSX\nconst relevantToCurrentBrowser = platform.os.family === 'OS X'\n  && (platform.layout === 'Gecko' || platform.layout === 'WebKit');\n\nif (!relevantToCurrentBrowser) {\n  engage = function() {};\n} else {\n  const inputPattern = /^(input|button)$/;\n\n  const handleMouseDownEvent = function(event) {\n    if (event.defaultPrevented || !event.target.nodeName.toLowerCase().match(inputPattern)) {\n      // abort if the mousedown event was cancelled\n      return;\n    }\n\n    // we need to set focus AFTER the mousedown finished, otherwise WebKit will ignore the call\n    (window.setImmediate || window.setTimeout)(function() {\n      event.target.focus();\n    });\n  };\n\n  const handleMouseUpEvent = function(event) {\n    if (event.defaultPrevented || event.target.nodeName.toLowerCase() !== 'label') {\n      // abort if the mouseup event was cancelled\n      return;\n    }\n\n    // <label> will redirect focus to the appropriate input element on its own\n    event.target.focus();\n  };\n\n  engage = function(element) {\n    element.addEventListener('mousedown', handleMouseDownEvent, false);\n    // <label> elements redirect focus upon mouseup, not mousedown\n    element.addEventListener('mouseup', handleMouseUpEvent, false);\n  };\n\n  disengage = function(element) {\n    element.removeEventListener('mousedown', handleMouseDownEvent, false);\n    element.removeEventListener('mouseup', handleMouseUpEvent, false);\n  };\n}\n\nexport default decorateContext({ engage, disengage });\n"]}