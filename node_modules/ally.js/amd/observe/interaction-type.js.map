{"version":3,"sources":["../../src/observe/interaction-type.js"],"names":[],"mappings":"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","file":"interaction-type.js","sourcesContent":["\n/*\n  Observe keyboard-, pointer-, mouse- and touch-events so that a query for\n  the current interaction type can be made at any time. For pointer interaction\n  this observer is limited to pointer button down/up - move is not observed!\n\n  USAGE:\n    var listener = engage();\n    listener.get() === {pointer: Boolean, key: Boolean}\n*/\n\nimport decorateService from '../util/decorate-service';\n\n// counters to track primary input\nlet _activePointers = 0;\nlet _activeKeys = 0;\n\nconst pointerStartEvents = [\n  'touchstart',\n  'pointerdown',\n  'MSPointerDown',\n  'mousedown',\n];\nconst pointerEndEvents = [\n  'touchend',\n  'touchcancel',\n  'pointerup',\n  'MSPointerUp',\n  'pointercancel',\n  'MSPointerCancel',\n  'mouseup',\n];\n\nfunction handleWindowBlurEvent() {\n  // reset internal counters when window loses focus\n  _activePointers = 0;\n  _activeKeys = 0;\n}\n\nfunction handlePointerStartEvent(event) {\n  if (event.isPrimary === false) {\n    // ignore non-primary pointer events\n    // https://w3c.github.io/pointerevents/#widl-PointerEvent-isPrimary\n    return;\n  }\n\n  // mousedown without following mouseup\n  // (likely not possible in Chrome)\n  _activePointers++;\n}\n\nfunction handlePointerEndEvent(event) {\n  if (event.isPrimary === false) {\n    // ignore non-primary pointer events\n    // https://w3c.github.io/pointerevents/#widl-PointerEvent-isPrimary\n    return;\n  } else if (event.touches) {\n    _activePointers = event.touches.length;\n    return;\n  }\n\n  // delay reset to when the current handlers are executed\n  (window.setImmediate || window.setTimeout)(function() {\n    // mouseup without prior mousedown\n    // (drag something out of the window)\n    _activePointers = Math.max(_activePointers - 1, 0);\n  });\n}\n\nfunction handleKeyStartEvent(event) {\n  // ignore modifier keys\n  switch (event.keyCode || event.which) {\n    case 16: // space\n    case 17: // control\n    case 18: // alt\n    case 91: // command left\n    case 93: // command right\n      return;\n  }\n\n  // keydown without a following keyup\n  // (may happen on CMD+TAB)\n  _activeKeys++;\n}\n\nfunction handleKeyEndEvent(event) {\n  // ignore modifier keys\n  switch (event.keyCode || event.which) {\n    case 16: // space\n    case 17: // control\n    case 18: // alt\n    case 91: // command left\n    case 93: // command right\n      return;\n  }\n\n  // delay reset to when the current handlers are executed\n  (window.setImmediate || window.setTimeout)(function() {\n    // keyup without prior keydown\n    // (may happen on CMD+R)\n    _activeKeys = Math.max(_activeKeys - 1, 0);\n  });\n}\n\nfunction getInteractionType() {\n  return {\n    pointer: Boolean(_activePointers),\n    key: Boolean(_activeKeys),\n  };\n}\n\nfunction disengage() {\n  _activePointers = _activeKeys = 0;\n  window.removeEventListener('blur', handleWindowBlurEvent, false);\n  document.documentElement.removeEventListener('keydown', handleKeyStartEvent, true);\n  document.documentElement.removeEventListener('keyup', handleKeyEndEvent, true);\n  pointerStartEvents.forEach(function(event) {\n    document.documentElement.removeEventListener(event, handlePointerStartEvent, true);\n  });\n  pointerEndEvents.forEach(function(event) {\n    document.documentElement.removeEventListener(event, handlePointerEndEvent, true);\n  });\n}\n\nfunction engage() {\n  // window blur must be in bubble phase so it won't capture regular blurs\n  window.addEventListener('blur', handleWindowBlurEvent, false);\n  // handlers to identify the method of focus change\n  document.documentElement.addEventListener('keydown', handleKeyStartEvent, true);\n  document.documentElement.addEventListener('keyup', handleKeyEndEvent, true);\n  pointerStartEvents.forEach(function(event) {\n    document.documentElement.addEventListener(event, handlePointerStartEvent, true);\n  });\n  pointerEndEvents.forEach(function(event) {\n    document.documentElement.addEventListener(event, handlePointerEndEvent, true);\n  });\n\n  return {\n    get: getInteractionType,\n  };\n}\n\nexport default decorateService({ engage, disengage });\n"]}