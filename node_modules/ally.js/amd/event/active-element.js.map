{"version":3,"sources":["../../src/event/active-element.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAI,qBAAqB,YAAA,CAAC;AAC1B,MAAI,GAAG,YAAA,CAAC;;AAER,WAAS,oBAAoB,GAAG;AAC9B,QAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;;AAE3B,cAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;KACvB,MAAM,IAAI,QAAQ,CAAC,aAAa,KAAK,qBAAqB,EAAE;;AAE3D,UAAM,kBAAkB,GAAG,4BAAgB,gBAAgB,EAAE;AAC3D,eAAO,EAAE,KAAK;AACd,kBAAU,EAAE,KAAK;AACjB,cAAM,EAAE;AACN,eAAK,EAAE,QAAQ,CAAC,aAAa;AAC7B,cAAI,EAAE,qBAAqB;SAC5B;OACF,CAAC,CAAC;;AAEH,cAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;AAC3C,2BAAqB,GAAG,QAAQ,CAAC,aAAa,CAAC;KAChD;;AAED,QAAI,GAAG,KAAK,KAAK,EAAE;AACjB,aAAO;KACR;;AAED,OAAG,GAAG,qBAAqB,CAAC,oBAAoB,CAAC,CAAC;GACnD;;AAED,WAAS,MAAM,GAAG;AAChB,OAAG,GAAG,IAAI,CAAC;AACX,yBAAqB,GAAG,QAAQ,CAAC,aAAa,CAAC;AAC/C,wBAAoB,EAAE,CAAC;GACxB;;AAED,WAAS,SAAS,GAAG;AACnB,wBAAoB,CAAC,GAAG,CAAC,CAAC;AAC1B,OAAG,GAAG,KAAK,CAAC;GACb;;mBAEc,iCAAgB,EAAE,MAAM,EAAN,MAAM,EAAE,SAAS,EAAT,SAAS,EAAE,CAAC","file":"active-element.js","sourcesContent":["\n/*\n  Debugging tool that observe changes to activeElement regardless of focus/blur events.\n  This utility does *not* work with Shadow DOM.\n\n  USAGE:\n    engage();\n    document.body.addEventListener('active-element', function(event) {\n      // event.detail.focus: element that received focus\n      // event.detail.blur: element that lost focus\n    }, false);\n\n\n  NOTE: You *can* use event-delegation on focus events by using the capture-phase:\n    document.body.addEventListener('focus', function(event) {\n      // event.target: element that received focus\n      // event.relatedTarget: element that lost focus\n    }, true);\n*/\n\nimport '../prototype/window.requestanimationframe';\nimport CustomEvent from '../prototype/window.customevent';\nimport decorateService from '../util/decorate-service';\n\nlet previousActiveElement;\nlet raf;\n\nfunction observeActiveElement() {\n  if (!document.activeElement) {\n    // IE10 does not redirect focus to <body> when the activeElement is removed\n    document.body.focus();\n  } else if (document.activeElement !== previousActiveElement) {\n    // https://developer.mozilla.org/en/docs/Web/API/CustomEvent\n    const activeElementEvent = new CustomEvent('active-element', {\n      bubbles: false,\n      cancelable: false,\n      detail: {\n        focus: document.activeElement,\n        blur: previousActiveElement,\n      },\n    });\n\n    document.dispatchEvent(activeElementEvent);\n    previousActiveElement = document.activeElement;\n  }\n\n  if (raf === false) {\n    return;\n  }\n\n  raf = requestAnimationFrame(observeActiveElement);\n}\n\nfunction engage() {\n  raf = true;\n  previousActiveElement = document.activeElement;\n  observeActiveElement();\n}\n\nfunction disengage() {\n  cancelAnimationFrame(raf);\n  raf = false;\n}\n\nexport default decorateService({ engage, disengage });\n"]}