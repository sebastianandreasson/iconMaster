{"version":3,"sources":["../../src/supports/supports-cache.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;uBAQoB,YAAY;;;;AAEhC,SAAS,gBAAgB,CAAC,GAAG,EAAE;;;AAG7B,MAAI,IAAI,YAAA,CAAC;;AAET,MAAI;AACF,QAAI,GAAG,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC/D,QAAI,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;GACrC,CAAC,OAAO,CAAC,EAAE;AACV,QAAI,GAAG,EAAE,CAAC;GACX;;AAED,SAAO,IAAI,CAAC;CACb;;AAED,SAAS,iBAAiB,CAAC,GAAG,EAAE,KAAK,EAAE;AACrC,MAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE;;;;AAIxB,QAAI;AACF,YAAM,CAAC,YAAY,IAAI,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC5D,CAAC,OAAM,CAAC,EAAE;;KAEV;;AAED,WAAO;GACR;;AAED,MAAI;AACF,UAAM,CAAC,YAAY,IAAI,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;GAChF,CAAC,OAAO,CAAC,EAAE;;GAEX;CACF;;AAED,IAAM,SAAS,GAAG,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,IAAI,EAAE,CAAC;AACpF,IAAM,QAAQ,GAAG,qBAAqB,CAAC;AACvC,IAAI,KAAK,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;;;AAGvC,IAAI,KAAK,CAAC,SAAS,KAAK,SAAS,IAAI,KAAK,CAAC,OAAO,yBAAY,EAAE;AAC9D,OAAK,GAAG,EAAE,CAAC;CACZ;;AAED,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;AAC5B,KAAK,CAAC,OAAO,uBAAU,CAAC;;qBAET;AACb,KAAG,EAAE,SAAS,aAAa,CAAC,GAAG,EAAE;AAC/B,WAAO,KAAK,CAAC,GAAG,CAAC,CAAC;GACnB;AACD,KAAG,EAAE,SAAS,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE;AACtC,SAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACnB,qBAAiB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;GACpC;CACF","file":"supports-cache.js","sourcesContent":["/*\n    Facility to cache test results in localStorage.\n\n    USAGE:\n      cache.get('key');\n      cache.set('key', 'value');\n */\n\nimport version from '../version';\n\nfunction readLocalStorage(key) {\n  // allow reading from storage to retrieve previous support results\n  // even while the document does not have focus\n  let data;\n\n  try {\n    data = window.localStorage && window.localStorage.getItem(key);\n    data = data ? JSON.parse(data) : {};\n  } catch (e) {\n    data = {};\n  }\n\n  return data;\n}\n\nfunction writeLocalStorage(key, value) {\n  if (!document.hasFocus()) {\n    // if the document does not have focus when tests are executed, focus() may\n    // not be handled properly and events may not be dispatched immediately.\n    // This can happen when a document is reloaded while Developer Tools have focus.\n    try {\n      window.localStorage && window.localStorage.removeItem(key);\n    } catch(e) {\n      // ignore\n    }\n\n    return;\n  }\n\n  try {\n    window.localStorage && window.localStorage.setItem(key, JSON.stringify(value));\n  } catch (e) {\n    // ignore\n  }\n}\n\nconst userAgent = typeof window !== 'undefined' && window.navigator.userAgent || '';\nconst cacheKey = 'ally-supports-cache';\nlet cache = readLocalStorage(cacheKey);\n\n// update the cache if ally or the user agent changed (newer version, etc)\nif (cache.userAgent !== userAgent || cache.version !== version) {\n  cache = {};\n}\n\ncache.userAgent = userAgent;\ncache.version = version;\n\nexport default {\n  get: function getCacheValue(key) {\n    return cache[key];\n  },\n  set: function setCacheValue(key, value) {\n    cache[key] = value;\n    writeLocalStorage(cacheKey, cache);\n  },\n};\n"]}