{"version":3,"sources":["../../src/query/focusable.quick.js"],"names":[],"mappings":";;;;;;;;;qBAOwB,mBAAmB;;;;iCAHtB,uBAAuB;;;;2BACpB,iBAAiB;;;;AAE1B,SAAS,mBAAmB,GAAiC;mEAAJ,EAAE;;MAA7B,OAAO,QAAP,OAAO;MAAE,cAAc,QAAd,cAAc;;AAClE,MAAM,SAAS,GAAG,qCAAU,CAAC;AAC7B,MAAM,QAAQ,GAAG,OAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;;AAErD,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,2BAAc,CAAC;;AAErD,MAAI,cAAc,IAAI,8BAAY,OAAO,CAAC,EAAE;AAC1C,UAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;GACzB;;AAED,SAAO,MAAM,CAAC;CACf","file":"focusable.quick.js","sourcesContent":["\n// http://www.w3.org/TR/html5/editing.html#focusable\n// http://www.w3.org/WAI/PF/aria-practices/#keyboard\n\nimport selector from '../selector/focusable';\nimport isFocusable from '../is/focusable';\n\nexport default function queryFocusableQuick({context, includeContext} = {}) {\n  const _selector = selector();\n  const elements = context.querySelectorAll(_selector);\n  // the selector potentially matches more than really is focusable\n  const result = [].filter.call(elements, isFocusable);\n  // add context if requested and focusable\n  if (includeContext && isFocusable(context)) {\n    result.unshift(context);\n  }\n\n  return result;\n}\n"]}