{"version":3,"sources":["../../src/get/shadow-host.js"],"names":[],"mappings":";;;;;;;;6BACsB,oBAAoB;;;;qBAE3B,YAAyB;mEAAJ,EAAE;;MAAb,OAAO,QAAP,OAAO;;AAC9B,MAAI,OAAO,GAAG,gCAAU,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,MAAI,CAAC,OAAO,EAAE;AACZ,UAAM,IAAI,SAAS,CAAC,gDAAgD,CAAC,CAAC;GACvE;;;AAGD,MAAI,SAAS,GAAG,IAAI,CAAC;;AAErB,SAAO,OAAO,EAAE;AACd,aAAS,GAAG,OAAO,CAAC;AACpB,WAAO,GAAG,OAAO,CAAC,UAAU,CAAC;GAC9B;;AAED,MAAI,CAAC,SAAS,EAAE;AACd,WAAO,IAAI,CAAC;GACb;;;;AAID,MAAI,SAAS,CAAC,QAAQ,KAAK,SAAS,CAAC,sBAAsB,IAAI,SAAS,CAAC,IAAI,EAAE;;AAE7E,WAAO,SAAS,CAAC,IAAI,CAAC;GACvB;;AAED,SAAO,IAAI,CAAC;CACb","file":"shadow-host.js","sourcesContent":["\nimport nodeArray from '../util/node-array';\n\nexport default function({context} = {}) {\n  let element = nodeArray(context)[0];\n  if (!element) {\n    throw new TypeError('get/shadow-host requires valid options.context');\n  }\n\n  // walk up to the root\n  let container = null;\n\n  while (element) {\n    container = element;\n    element = element.parentNode;\n  }\n\n  if (!container) {\n    return null;\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Node.nodeType\n  // NOTE: Firefox 34 does not expose ShadowRoot.host (but 37 does)\n  if (container.nodeType === container.DOCUMENT_FRAGMENT_NODE && container.host) {\n    // the root is attached to a fragment node that has a host\n    return container.host;\n  }\n\n  return null;\n}\n"]}