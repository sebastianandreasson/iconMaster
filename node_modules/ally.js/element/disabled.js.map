{"version":3,"sources":["../../src/element/disabled.js"],"names":[],"mappings":"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","file":"disabled.js","sourcesContent":["\n/*\n  Utility to make any element inert (disabled). Inert means the elements cannot be interacted\n  with and they cannot be focused via script, pointer or keyboard - and thus not receive focus.\n\n  Elements made inert (disabled) by this utility are given the attribute [data-ally-disabled=\"true\"].\n\n  ---------------\n\n  inert attribute was [removed](https://html5.org/r/8536) [tweet by steve](https://twitter.com/stevefaulkner/status/443075900201259008)\n  but definition of [inert subtrees](http://www.w3.org/html/wg/drafts/html/master/editing.html#inert-subtrees) remains.\n\n  [implementation idea by Vasilis](http://codepen.io/vasilisvg/pen/scowI)\n  [inert attribute polyfill by GoogleChrome](https://github.com/GoogleChrome/inert-polyfill)\n\n  [Gecko Bug: Inert Attribute](https://bugzilla.mozilla.org/show_bug.cgi?id=921504)\n  [Chromium Bug: Inert Attribute](https://code.google.com/p/chromium/issues/detail?id=269846)\n  [Chromium Bug: Inert Subtree](https://code.google.com/p/chromium/issues/detail?id=241699)\n  [WebKit Bug: Inert Subtree](https://bugs.webkit.org/show_bug.cgi?id=110952)\n*/\n\nimport tabindexValue from '../util/tabindex-value';\nimport isNativeDisabledSupported from '../is/native-disabled-supported';\nimport toggleAttributeValue from '../util/toggle-attribute-value';\n\nfunction disabledFocus() {\n  /*eslint-disable no-console */\n  console.warn('trying to focus inert element', this);\n  /*eslint-enable no-console */\n}\n\nfunction disableTabindex(element, disabledState) {\n  if (disabledState) {\n    const tabIndex = tabindexValue(element);\n    toggleAttributeValue({\n      element,\n      attribute: 'tabindex',\n      temporaryValue: '-1',\n      saveValue: tabIndex !== null ? tabIndex : '',\n    });\n  } else {\n    toggleAttributeValue({\n      element,\n      attribute: 'tabindex',\n    });\n  }\n}\n\nfunction disableVideoControls(element, disabledState) {\n  // Chrome leaves <video controls tabindex=\"-1\"> in document focus navigation sequence\n  const nodeName = element.nodeName.toLowerCase();\n  if (nodeName !== 'video' && nodeName !== 'audio') {\n    return;\n  }\n\n  if (disabledState) {\n    if (element.hasAttribute('controls')) {\n      element.setAttribute('data-inert-controls', '');\n      element.removeAttribute('controls');\n    }\n  } else {\n    const restoreControls = element.hasAttribute('data-inert-controls');\n    if (restoreControls) {\n      element.removeAttribute('data-inert-controls');\n      element.setAttribute('controls', '');\n    }\n  }\n}\n\nfunction disableSvgFocusable(element, disabledState) {\n  const nodeName = element.nodeName.toLowerCase();\n  if (nodeName !== 'svg' && !element.ownerSVGElement) {\n    return;\n  }\n\n  toggleAttributeValue({\n    element,\n    attribute: 'focusable',\n    temporaryValue: disabledState ? 'false' : undefined,\n  });\n}\n\nfunction setAriaDisabled(element, disabledState) {\n  toggleAttributeValue({\n    element,\n    attribute: 'aria-disabled',\n    temporaryValue: disabledState ? 'true' : undefined,\n  });\n}\n\nfunction disableScriptFocus(element, disabledState) {\n  if (disabledState) {\n    // make sure no script can focus the element\n    element.focus = disabledFocus;\n  } else {\n    // restore original focus function from prototype\n    delete element.focus;\n  }\n}\n\nfunction disablePointerEvents(element, disabledState) {\n  if (disabledState) {\n    // remember previous pointer events status so we can restore it\n    const pointerEvents = element.style.pointerEvents || '';\n    element.setAttribute('data-inert-pointer-events', pointerEvents);\n    // make sure no pointer interaction can access the element\n    element.style.pointerEvents = 'none';\n  } else {\n    // restore to previous pointer interaction status\n    const pointerEvents = element.getAttribute('data-inert-pointer-events');\n    element.removeAttribute('data-inert-pointer-events');\n    element.style.pointerEvents = pointerEvents;\n  }\n}\n\nfunction setElementDisabled(element, disabledState) {\n  setAriaDisabled(element, disabledState);\n  disableTabindex(element, disabledState);\n  disableScriptFocus(element, disabledState);\n  disablePointerEvents(element, disabledState);\n  disableVideoControls(element, disabledState);\n  disableSvgFocusable(element, disabledState);\n\n  if (disabledState) {\n    element.setAttribute('data-ally-disabled', 'true');\n  } else {\n    element.removeAttribute('data-ally-disabled');\n  }\n}\n\nexport default function(element, disabledState) {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    throw new TypeError('element/disabled requires an argument of type Element');\n  }\n\n  // accept truthy/falsy values\n  disabledState = Boolean(disabledState);\n  const currentState = element.hasAttribute('data-ally-disabled');\n  // if there's no value to set, we're running as a getter\n  const runningAsGetter = arguments.length === 1;\n\n  if (isNativeDisabledSupported(element)) {\n    if (runningAsGetter) {\n      return element.disabled;\n    }\n\n    // form elements know the disabled attribute, which we shall use instead of our poor man's copy of it\n    element.disabled = disabledState;\n    return element;\n  }\n\n  if (runningAsGetter) {\n    return currentState;\n  }\n\n  if (currentState === disabledState) {\n    // no update necessary\n    return element;\n  }\n\n  setElementDisabled(element, disabledState);\n  return element;\n}\n"]}